import { firBP } from "./FirFilterDesiner";

test("Kaiser Window BP", () => {
    const expected = [
        -3.9543e-06, -2.3085e-05, 1.7360e-04, -4.1151e-04, 6.0424e-04, -5.7070e-04, 1.8054e-04, 5.4273e-04, -1.3780e-03, 1.9654e-03, -1.9609e-03,
        1.2204e-03, 8.3378e-05, -1.4904e-03, 2.4411e-03, -2.5465e-03, 1.8044e-03, -6.3431e-04, -3.1722e-04, 5.2628e-04, 7.9407e-05, -1.0047e-03,
        1.3894e-03, -4.7073e-04, -1.9104e-03, 5.0387e-03, -7.4903e-03, 7.7293e-03, -4.8951e-03, -6.0542e-04, 7.0463e-03, -1.1986e-02, 1.3320e-02,
        -1.0299e-02, 4.0127e-03, 2.9971e-03, -7.8741e-03, 8.8465e-03, -6.1862e-03, 2.1757e-03, 2.1050e-05, 1.8786e-03, -7.7363e-03, 1.4544e-02,
        -1.7491e-02, 1.2253e-02, 2.4641e-03, -2.3392e-02, 4.3110e-02, -5.2580e-02, 4.4930e-02, -1.8967e-02, -1.9242e-02, 5.7687e-02, -8.2413e-02,
        8.2814e-02, -5.6124e-02, 9.1842e-03, 4.3428e-02, -8.4368e-02, 9.9773e-02, -8.4368e-02, 4.3428e-02, 9.1842e-03, -5.6124e-02, 8.2814e-02,
        -8.2413e-02, 5.7687e-02, -1.9242e-02, -1.8967e-02, 4.4930e-02, -5.2580e-02, 4.3110e-02, -2.3392e-02, 2.4641e-03, 1.2253e-02, -1.7491e-02,
        1.4544e-02, -7.7363e-03, 1.8786e-03, 2.1050e-05, 2.1757e-03, -6.1862e-03, 8.8465e-03, -7.8741e-03, 2.9971e-03, 4.0127e-03, -1.0299e-02,
        1.3320e-02, -1.1986e-02, 7.0463e-03, -6.0542e-04, -4.8951e-03, 7.7293e-03, -7.4903e-03, 5.0387e-03, -1.9104e-03, -4.7073e-04, 1.3894e-03,
        -1.0047e-03, 7.9407e-05, 5.2628e-04, -3.1722e-04, -6.3431e-04, 1.8044e-03, -2.5465e-03, 2.4411e-03, -1.4904e-03, 8.3378e-05, 1.2204e-03,
        -1.9609e-03, 1.9654e-03, -1.3780e-03, 5.4273e-04, 1.8054e-04, -5.7070e-04, 6.0424e-04, -4.1151e-04, 1.7360e-04, -2.3085e-05, -3.9543e-06
    ];

    const actual = firBP(0.05, 30, [16.5e3, 17.6e3, 18.7e3, 20e3], 44.1e3);
    actual.forEach((_, i) =>
        expect(actual[i]).toBeCloseTo(expected[i], 6));
    actual.forEach((_, i) =>
        expect(Math.log(Math.abs(actual[i]))).toBeCloseTo(Math.log(Math.abs(expected[i])), 4));
});
